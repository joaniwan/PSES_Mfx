<?xml version="1.0"?>
<analyzerinfo checksum="2799538216">
        <error id="selfAssignment" severity="warning" msg="Redundant assignment of &apos;tmp&apos; to itself." verbose="Redundant assignment of &apos;tmp&apos; to itself." cwe="398" file0="Mfx.c">
            <location file="Mfx.c" line="206" column="17"/>
            <symbol>tmp</symbol>
        </error>
        <error id="selfAssignment" severity="warning" msg="Redundant assignment of &apos;tmp&apos; to itself." verbose="Redundant assignment of &apos;tmp&apos; to itself." cwe="398" file0="Mfx.c">
            <location file="Mfx.c" line="236" column="17"/>
            <symbol>tmp</symbol>
        </error>
        <error id="selfAssignment" severity="warning" msg="Redundant assignment of &apos;tmp&apos; to itself." verbose="Redundant assignment of &apos;tmp&apos; to itself." cwe="398" file0="Mfx.c">
            <location file="Mfx.c" line="252" column="17"/>
            <symbol>tmp</symbol>
        </error>
        <error id="selfAssignment" severity="warning" msg="Redundant assignment of &apos;tmp&apos; to itself." verbose="Redundant assignment of &apos;tmp&apos; to itself." cwe="398" file0="Mfx.c">
            <location file="Mfx.c" line="392" column="17"/>
            <symbol>tmp</symbol>
        </error>
        <error id="selfAssignment" severity="warning" msg="Redundant assignment of &apos;tmp&apos; to itself." verbose="Redundant assignment of &apos;tmp&apos; to itself." cwe="398" file0="Mfx.c">
            <location file="Mfx.c" line="437" column="17"/>
            <symbol>tmp</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tmp&apos; is less than zero." verbose="The unsigned expression &apos;tmp&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="902" column="22" info="Unsigned less than zero"/>
            <symbol>tmp</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tmp&apos; is less than zero." verbose="The unsigned expression &apos;tmp&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="979" column="22" info="Unsigned less than zero"/>
            <symbol>tmp</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tmp&apos; is less than zero." verbose="The unsigned expression &apos;tmp&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="1056" column="22" info="Unsigned less than zero"/>
            <symbol>tmp</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tmp&apos; is less than zero." verbose="The unsigned expression &apos;tmp&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="1137" column="18" info="Unsigned less than zero"/>
            <symbol>tmp</symbol>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;x&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;x&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="1363" column="25" info="Unsigned positive"/>
            <symbol>x</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;x&apos; is less than zero." verbose="The unsigned expression &apos;x&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="1367" column="33" info="Unsigned less than zero"/>
            <symbol>x</symbol>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;x&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;x&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="1464" column="25" info="Unsigned positive"/>
            <symbol>x</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tmp&apos; is less than zero." verbose="The unsigned expression &apos;tmp&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="1601" column="22" info="Unsigned less than zero"/>
            <symbol>tmp</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tmp&apos; is less than zero." verbose="The unsigned expression &apos;tmp&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="1718" column="22" info="Unsigned less than zero"/>
            <symbol>tmp</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tmp&apos; is less than zero." verbose="The unsigned expression &apos;tmp&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="1834" column="22" info="Unsigned less than zero"/>
            <symbol>tmp</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tmp&apos; is less than zero." verbose="The unsigned expression &apos;tmp&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="1950" column="22" info="Unsigned less than zero"/>
            <symbol>tmp</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tmp&apos; is less than zero." verbose="The unsigned expression &apos;tmp&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="2138" column="22" info="Unsigned less than zero"/>
            <symbol>tmp</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tmp&apos; is less than zero." verbose="The unsigned expression &apos;tmp&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="Mfx.c">
            <location file="Mfx.c" line="2218" column="22" info="Unsigned less than zero"/>
            <symbol>tmp</symbol>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1622." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1622." cwe="758" file0="Mfx.c">
            <location file="Mfx.c" line="1628" column="22" info="Shift"/>
            <location file="Mfx.c" line="1622" column="18" info="Assuming that condition &apos;(a-b)&gt;31&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1641." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1641." cwe="758" file0="Mfx.c">
            <location file="Mfx.c" line="1647" column="22" info="Shift"/>
            <location file="Mfx.c" line="1641" column="18" info="Assuming that condition &apos;(b-a)&gt;31&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1676." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1676." cwe="758" file0="Mfx.c">
            <location file="Mfx.c" line="1682" column="22" info="Shift"/>
            <location file="Mfx.c" line="1676" column="18" info="Assuming that condition &apos;(a-b)&gt;31&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1695." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1695." cwe="758" file0="Mfx.c">
            <location file="Mfx.c" line="1701" column="22" info="Shift"/>
            <location file="Mfx.c" line="1695" column="18" info="Assuming that condition &apos;(b-a)&gt;31&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1854." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1854." cwe="758" file0="Mfx.c">
            <location file="Mfx.c" line="1860" column="22" info="Shift"/>
            <location file="Mfx.c" line="1854" column="18" info="Assuming that condition &apos;(a-b)&gt;31&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1873." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1873." cwe="758" file0="Mfx.c">
            <location file="Mfx.c" line="1879" column="22" info="Shift"/>
            <location file="Mfx.c" line="1873" column="18" info="Assuming that condition &apos;(b-a)&gt;31&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1908." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1908." cwe="758" file0="Mfx.c">
            <location file="Mfx.c" line="1914" column="22" info="Shift"/>
            <location file="Mfx.c" line="1908" column="18" info="Assuming that condition &apos;(a-b)&gt;31&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1927." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 1927." cwe="758" file0="Mfx.c">
            <location file="Mfx.c" line="1933" column="22" info="Shift"/>
            <location file="Mfx.c" line="1927" column="18" info="Assuming that condition &apos;(b-a)&gt;31&apos; is not redundant"/>
        </error>
        <error id="integerOverflowCond" severity="warning" msg="Either the condition &apos;(a-b)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(a-b)&apos;." verbose="Either the condition &apos;(a-b)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(a-b)&apos;." cwe="190" file0="Mfx.c">
            <location file="Mfx.c" line="1628" column="22" info="Integer overflow"/>
            <location file="Mfx.c" line="1622" column="18" info="Assuming that condition &apos;(a-b)&gt;31&apos; is not redundant"/>
        </error>
        <error id="integerOverflowCond" severity="warning" msg="Either the condition &apos;(b-a)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(b-a)&apos;." verbose="Either the condition &apos;(b-a)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(b-a)&apos;." cwe="190" file0="Mfx.c">
            <location file="Mfx.c" line="1647" column="22" info="Integer overflow"/>
            <location file="Mfx.c" line="1641" column="18" info="Assuming that condition &apos;(b-a)&gt;31&apos; is not redundant"/>
        </error>
        <error id="integerOverflowCond" severity="warning" msg="Either the condition &apos;(a-b)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(a-b)&apos;." verbose="Either the condition &apos;(a-b)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(a-b)&apos;." cwe="190" file0="Mfx.c">
            <location file="Mfx.c" line="1682" column="22" info="Integer overflow"/>
            <location file="Mfx.c" line="1676" column="18" info="Assuming that condition &apos;(a-b)&gt;31&apos; is not redundant"/>
        </error>
        <error id="integerOverflowCond" severity="warning" msg="Either the condition &apos;(b-a)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(b-a)&apos;." verbose="Either the condition &apos;(b-a)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(b-a)&apos;." cwe="190" file0="Mfx.c">
            <location file="Mfx.c" line="1701" column="22" info="Integer overflow"/>
            <location file="Mfx.c" line="1695" column="18" info="Assuming that condition &apos;(b-a)&gt;31&apos; is not redundant"/>
        </error>
        <error id="integerOverflowCond" severity="warning" msg="Either the condition &apos;(a-b)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(a-b)&apos;." verbose="Either the condition &apos;(a-b)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(a-b)&apos;." cwe="190" file0="Mfx.c">
            <location file="Mfx.c" line="1860" column="22" info="Integer overflow"/>
            <location file="Mfx.c" line="1854" column="18" info="Assuming that condition &apos;(a-b)&gt;31&apos; is not redundant"/>
        </error>
        <error id="integerOverflowCond" severity="warning" msg="Either the condition &apos;(b-a)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(b-a)&apos;." verbose="Either the condition &apos;(b-a)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(b-a)&apos;." cwe="190" file0="Mfx.c">
            <location file="Mfx.c" line="1879" column="22" info="Integer overflow"/>
            <location file="Mfx.c" line="1873" column="18" info="Assuming that condition &apos;(b-a)&gt;31&apos; is not redundant"/>
        </error>
        <error id="integerOverflowCond" severity="warning" msg="Either the condition &apos;(a-b)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(a-b)&apos;." verbose="Either the condition &apos;(a-b)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(a-b)&apos;." cwe="190" file0="Mfx.c">
            <location file="Mfx.c" line="1914" column="22" info="Integer overflow"/>
            <location file="Mfx.c" line="1908" column="18" info="Assuming that condition &apos;(a-b)&gt;31&apos; is not redundant"/>
        </error>
        <error id="integerOverflowCond" severity="warning" msg="Either the condition &apos;(b-a)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(b-a)&apos;." verbose="Either the condition &apos;(b-a)&gt;31&apos; is redundant or there is signed integer overflow for expression &apos;1&lt;&lt;(b-a)&apos;." cwe="190" file0="Mfx.c">
            <location file="Mfx.c" line="1933" column="22" info="Integer overflow"/>
            <location file="Mfx.c" line="1927" column="18" info="Assuming that condition &apos;(b-a)&gt;31&apos; is not redundant"/>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="Mfx_Add_s16s16_s16" lineNumber="67"/>
    <functiondecl functionName="Mfx_Add_s32s32_s32" lineNumber="82"/>
    <functiondecl functionName="Mfx_Sub_s16s16_s16" lineNumber="102"/>
    <functiondecl functionName="Mfx_Sub_s32s32_s32" lineNumber="117"/>
    <functiondecl functionName="Mfx_Abs_s16_s16" lineNumber="138"/>
    <functiondecl functionName="Mfx_Abs_s32_s32" lineNumber="157"/>
    <functiondecl functionName="Mfx_AbsDiff_s16s16_s16" lineNumber="183"/>
    <functiondecl functionName="Mfx_AbsDiff_s32s32_s32" lineNumber="213"/>
    <functiondecl functionName="Mfx_AbsDiff_u32u32_u32" lineNumber="242"/>
    <functiondecl functionName="Mfx_Mul_s16s16_s16" lineNumber="272"/>
    <functiondecl functionName="Mfx_Mul_s32s32_s32" lineNumber="287"/>
    <functiondecl functionName="Mfx_Div_s16s16_s16" lineNumber="308"/>
    <functiondecl functionName="Mfx_Div_s32s32_s32" lineNumber="337"/>
    <functiondecl functionName="Mfx_RDiv_s16s16_s16" lineNumber="373"/>
    <functiondecl functionName="Mfx_RDiv_s32s32_s32" lineNumber="417"/>
    <functiondecl functionName="Mfx_MulDiv_s16s16_s16" lineNumber="468"/>
    <functiondecl functionName="Mfx_MulDiv_s32s32_s32" lineNumber="474"/>
    <functiondecl functionName="Mfx_RMulDiv_s16s16_s16" lineNumber="486"/>
    <functiondecl functionName="Mfx_RMulDiv_s32s32_s32" lineNumber="492"/>
    <functiondecl functionName="Mfx_MulShRight_s16s16u8_s32" lineNumber="504"/>
    <functiondecl functionName="Mfx_MulShRight_s32s32u8_s32" lineNumber="537"/>
    <functiondecl functionName="Mfx_DivShLeft_s16s16u8_s16" lineNumber="578"/>
    <functiondecl functionName="Mfx_DivShLeft_s32s32u8_s32" lineNumber="614"/>
    <functiondecl functionName="Mfx_Mod_s16" lineNumber="655"/>
    <functiondecl functionName="Mfx_Mod_s32" lineNumber="678"/>
    <functiondecl functionName="Mfx_Limit_s16" lineNumber="707"/>
    <functiondecl functionName="Mfx_Limit_s32" lineNumber="724"/>
    <functiondecl functionName="Mfx_Minmax_s16" lineNumber="747"/>
    <functiondecl functionName="Mfx_Minmax_s32" lineNumber="763"/>
    <functiondecl functionName="Mfx_Min_s16" lineNumber="786"/>
    <functiondecl functionName="Mfx_Min_s32" lineNumber="798"/>
    <functiondecl functionName="Mfx_Max_s16" lineNumber="810"/>
    <functiondecl functionName="Mfx_Max_s32" lineNumber="822"/>
    <functiondecl functionName="Mfx_ConvertP2_s16_s8" lineNumber="839"/>
    <functiondecl functionName="Mfx_ConvertP2_u16_u8" lineNumber="874"/>
    <functiondecl functionName="Mfx_ConvertP2_s8_s16" lineNumber="916"/>
    <functiondecl functionName="Mfx_ConvertP2_u8_u16" lineNumber="951"/>
    <functiondecl functionName="Mfx_ConvertP2_s32_s16" lineNumber="993"/>
    <functiondecl functionName="Mfx_ConvertP2_u32_u16" lineNumber="1028"/>
    <functiondecl functionName="Mfx_ConvertP2_s16_s32" lineNumber="1071"/>
    <functiondecl functionName="Mfx_ConvertP2_u16_u32" lineNumber="1108"/>
    <functiondecl functionName="Mfx_MulP2_s16s16_s16" lineNumber="1152"/>
    <functiondecl functionName="Mfx_MulP2_u16u16_u16" lineNumber="1188"/>
    <functiondecl functionName="Mfx_MulP2_s32s32_s32" lineNumber="1232"/>
    <functiondecl functionName="Mfx_MulP2_u32u32_u32" lineNumber="1268"/>
    <functiondecl functionName="Mfx_DivP2_s16s16_s16" lineNumber="1312"/>
    <functiondecl functionName="Mfx_DivP2_u16u16_u16" lineNumber="1349"/>
    <functiondecl functionName="Mfx_DivP2_s32s32_s32" lineNumber="1403"/>
    <functiondecl functionName="Mfx_DivP2_u32u32_u32" lineNumber="1450"/>
    <functiondecl functionName="Mfx_AddP2_s16s16_s16" lineNumber="1500"/>
    <functiondecl functionName="Mfx_AddP2_u16u16_u16" lineNumber="1554"/>
    <functiondecl functionName="Mfx_AddP2_s32s32_s32" lineNumber="1617"/>
    <functiondecl functionName="Mfx_AddP2_u32u32_u32" lineNumber="1671"/>
    <functiondecl functionName="Mfx_SubP2_s16s16_s16" lineNumber="1733"/>
    <functiondecl functionName="Mfx_SubP2_u16u16_u16" lineNumber="1787"/>
    <functiondecl functionName="Mfx_SubP2_s32s32_s32" lineNumber="1849"/>
    <functiondecl functionName="Mfx_SubP2_u32u32_u32" lineNumber="1903"/>
    <functiondecl functionName="Mfx_AbsDiffP2_s16s16_s16" lineNumber="1964"/>
    <functiondecl functionName="Mfx_AbsDiffP2_u16u16_u16" lineNumber="2014"/>
    <functiondecl functionName="Mfx_AbsP2_s16_s16" lineNumber="2073"/>
    <functiondecl functionName="Mfx_AbsP2_s16_u16" lineNumber="2109"/>
    <functiondecl functionName="Mfx_AbsP2_s32_s32" lineNumber="2153"/>
    <functiondecl functionName="Mfx_AbsP2_s32_u32" lineNumber="2189"/>
    <functioncall functionName="CPU_TYPE_16"/>
    <functioncall functionName="CPU_TYPE_32"/>
    <functioncall functionName="CPU_TYPE_64"/>
    <functioncall functionName="CPU_TYPE_8"/>
    <functioncall functionName="HIGH_BYTE_FIRST"/>
    <functioncall functionName="LOW_BYTE_FIRTS"/>
    <functioncall functionName="LSB_FIRST"/>
    <functioncall functionName="MSB_FIRST"/>
    <functioncall functionName="Mfx_AbsDiff_s32s32_s32"/>
    <functioncall functionName="Mfx_AbsDiff_u32u32_u32"/>
    <functioncall functionName="Mfx_Abs_s16_s16"/>
    <functioncall functionName="Mfx_Abs_s32_s32"/>
    <functioncall functionName="Mfx_Div_s16s16_s16"/>
    <functioncall functionName="Mfx_Div_s32s32_s32"/>
    <functioncall functionName="Mfx_Mul_s16s16_s16"/>
    <functioncall functionName="Mfx_Mul_s32s32_s32"/>
    <functioncall functionName="Mfx_RDiv_s16s16_s16"/>
    <functioncall functionName="Mfx_RDiv_s32s32_s32"/>
    <functioncall functionName="a"/>
    <functioncall functionName="b"/>
    <functioncall functionName="c"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int16_t"/>
    <functioncall functionName="int32_t"/>
    <functioncall functionName="int64_t"/>
    <functioncall functionName="int8_t"/>
    <functioncall functionName="return"/>
    <functioncall functionName="tmp"/>
    <functioncall functionName="uint16_t"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="uint64_t"/>
    <functioncall functionName="uint8_t"/>
    <functioncall functionName="value"/>
    <functioncall functionName="x"/>
    <functioncall functionName="x_value"/>
    <functioncall functionName="y"/>
    <functioncall functionName="y_value"/>
    <functioncall functionName="z_value"/>
  </FileInfo>
</analyzerinfo>
